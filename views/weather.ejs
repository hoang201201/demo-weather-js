<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="/style.css" rel="stylesheet" type="text/css" />
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"
    />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.bundle.min.js"></script>
    <title>App Weather</title>
  </head>
  <body>
    <div class="container-fluid px-1 px-sm-3 py-5 mx-auto">
      <div class="row d-flex justify-content-center">
        <div class="row card0">
          <div class="card1 col-lg-8 col-md-7">
            <div class="text-center">
              <img class="image mt-5" src="M8VyA2h.png" />
            </div>
            <div class="row px-3 mt-3 mb-3 name-city"></div>
          </div>
          <div class="card2 col-lg-4 col-md-5">
            <div class="row px-3">
              <input
                type="text"
                name="location"
                placeholder="Địa điểm khác"
                class="mb-5 search-city"
              />
              <div class="fa fa-search mb-5 mr-0 text-center search-btn"></div>
            </div>
            <div class="mr-5">
              <p class="light-text suggestion citySuggest">Hà Nội</p>
              <div class="city-list"></div>
              <div class="line my-5"></div>
              <p>Thông số thời tiết</p>
              <div class="list-detail"></div>
              <div class="line mt-3"></div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <style>
      body {
        color: #fff;
        overflow-x: hidden;
        height: 100vh;
        background-image: linear-gradient(#81d4fa, #2196f3);
        background-repeat: no-repeat;
      }

      .card0 {
        width: 94%;
      }

      .card1 {
        background-image: linear-gradient(#2196f3, #81d4fa);
        padding: 30px 20px 30px 50px;
      }

      .image {
        width: 300px;
        height: 300px;
      }

      .large-font {
        font-size: 70px;
        font-family: Arial;
      }

      .fa-sun-o {
        font-size: 1px;
      }

      .card2 {
        background-color: #607d8b;
        padding: 0px 0px 40px 40px;
      }

      input {
        background-color: #607d8b;
        padding: 24px 0px 12px 0px !important;
        width: 80%;
        box-sizing: border-box;
        border: none !important;
        border-bottom: 1px solid #cfd8dc !important;
        font-size: 16px !important;
        color: #fff !important;
      }

      input:focus {
        -moz-box-shadow: none !important;
        -webkit-box-shadow: none !important;
        box-shadow: none !important;
        border-bottom: 1px solid #fff !important;
        outline-width: 0;
        font-weight: 400;
      }

      ::placeholder {
        color: #b0bec5 !important;
        opacity: 1;
      }

      :-ms-input-placeholder {
        color: #b0bec5 !important;
      }

      ::-ms-input-placeholder {
        color: #b0bec5 !important;
      }

      .fa-search {
        color: #607d8b;
        background-color: #e1f5fe;
        font-size: 20px;
        padding: 20px;
        width: 20%;
        cursor: pointer;
      }

      .light-text {
        color: #b0bec5;
      }

      .suggestion:hover {
        color: #fff;
        cursor: pointer;
      }

      .line {
        height: 1px;
        background-color: #b0bec5;
      }

      @media screen and (max-width: 500px) {
        .card1 {
          padding-left: 26px;
        }
      }
    </style>
    <script>
      const API_URL = (cityName) => {
        return `http://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=e1c1b36106a885c64c2f31296dfff0ba&lang=vi`;
      };

      const nameInput = document.querySelector(".search-city");
      const srcBtn = document.querySelector(".search-btn");
      const listDetail = document.querySelector(".list-detail");
      const nameCity = document.querySelector(".name-city");
      const cityList = document.querySelector(".city-list");

      const app = {
        cityName: "Hanoi",
        city: [],
        renderCityList: function () {
          let htmls = app.city.map((city) => {
            return `<p class="light-text suggestion citySuggest">${city}</p>`;
          });

          cityList.innerHTML = htmls.join("");
        },
        renderList: (data) => {
          let html = `
            <div class="row px-3">
            <p class="light-text">Mây</p>
            <p class="ml-auto">${data.clouds.all}%</p>
            </div>
            <div class="row px-3">
                <p class="light-text">Độ ẩm</p>
                <p class="ml-auto">${data.main.humidity}%</p>
            </div>
            <div class="row px-3">
                <p class="light-text">Gió</p>
                <p class="ml-auto">${data.wind.speed}</p>
            </div>
            <div class="row px-3">
                <p class="light-text">Tầm nhìn xa</p>
                <p class="ml-auto">${data.visibility}m</p>
            </div>
        `;
          listDetail.innerHTML = html;
        },
        renderName: (data) => {
          let tempK = KtoC(data.main.temp);
          let info = upCase(data.weather[0].description);
          let html = `
            <h1 class="large-font mr-3">${tempK}&#176;</h1>
            <div class="d-flex flex-column mr-3 ">
                <h2 class="mt-3 mb-0 ">${data.name}</h2> <small class="timeClock"></small>
            </div>
            <div class="d-flex flex-column text-center">
            <img src="https://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png" class="icon fa fa-sun-o mt4"/></h3> <small class="description">${info}</small>
            </div>
        `;
          nameCity.innerHTML = html;
        },
        render: function (data) {
          console.log(data);
          app.renderList(data);
          app.renderName(data);
          app.renderCityList();
        },

        handleEvent: function () {
          let citySug = document.querySelector(".citySuggest");
          //Nút tìm kiếm thành phố
          srcBtn.onclick = function (e) {
            if (e.target.closest(".search-btn")) {
              if (nameInput.value != "") {
                app.cityName = nameInput.value;
                if (app.city.length <= 2) {
                  app.city.push(app.cityName);
                } else if (app.city.length > 2) {
                  app.city.shift();
                  app.city.push(app.cityName);
                }
              }
              app.getWeatherByCity(app.cityName, app.render);
            }
          };
          //Các thành phố trên thanh gợi ý
          citySug.onclick = function () {
            app.cityName = citySug.innerHTML;
            app.getWeatherByCity(app.cityName, app.render);
          };
        },

        getWeatherByCity: function (cityName, callBack) {
          fetch(API_URL(cityName))
            .then(function (resp) {
              return resp.json();
            })
            .then(callBack);
        },

        start: function () {
          this.getWeatherByCity(this.cityName, this.render);
          this.handleEvent();
        },
      };

      function upCase(str) {
        let arr = str.split("");
        let temp = arr[0].toUpperCase();
        arr.splice(0, 1, temp);
        return arr.join("");
      }

      function KtoC(K) {
        return Math.floor(K - 273, 15);
      }

      function showTime() {
        var date = new Date();
        var h = date.getHours(); // 0 - 23
        var m = date.getMinutes(); // 0 - 59
        var s = date.getSeconds(); // 0 - 59
        var day = date.toString().split(" ");
        var session = "AM";

        if (h == 0) {
          h = 12;
        }

        if (h > 12) {
          h = h - 12;
          session = "PM";
        }

        h = h < 10 ? "0" + h : h;
        m = m < 10 ? "0" + m : m;
        s = s < 10 ? "0" + s : s;

        var time = `${h}:${m}:${s} ${session} - ${day[0]}day, ${day[2]} ${day[1]} ${day[3]}`;

        let clock = document.querySelector(".timeClock");
        if (clock) {
          clock.innerText = time;
          clock.textContent = time;
        }

        setTimeout(showTime, 1000);
      }

      app.start();

      setTimeout(() => {
        showTime();
      }, 4000);
    </script>
  </body>
</html>
